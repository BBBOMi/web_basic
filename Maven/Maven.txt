Maven - 프로젝트의 전체적인 라이프 사이클을 관리하는 도구
      - Maven을 사용하면 빌드(Build), 패키징, 문서화, 테스트와 테스트 리포팅, git,
        의존성 관리, svn등과 같은 형상관리서버와 연동(SCMs), 배포 등의 작업을 손쉽게 할 수 있다

        *CoC(Convention over Configuration) : 개발자들에게 결정할 개수를 줄여서 개발을 용이하고 단순하게,
                하지만 유연성은 잃지 않게 하도록 하는 소프트웨어 디자인 패러다임.
              쉽게 말해 일종의 관습을 말하는데, 예를 들면 프로그램의 소스파일은 어떤 위치에 있어야 하고,
                소스가 컴파일된 파일들은 어떤 위치에 있어야 하고 등을 미리 정해 놨다는 것이다.

Maven의 이점 - 편리한 의존성 라이브러리 관리
               -> Maven을 사용하면 설정 파일에 몇 줄 적어줌으로써 직접 다운로드 받거나 하는 것을
                  하지 않아도 라이브러리를 사용할 수 있다.

             - 모든 개발자가 일관된 방식으로 빌드를 수행할 수 있다
             - 다양한 플러그인을 제공해줘서 굉장히 많은 일들을 자동화시킬 수 있다

Maven 기본(pom.xml의 태그들) - project : pom.xml 파일의 최상위 Root Element
                            - modelVersion : POM model의 버전
                            - groupId : 프로젝트를 생성하는 조직의 고유 아이디를 결정
                                  Maven을 이용하여 pom.xml을 빌드할 경우 artifactId-version.packaging과 같은 규칙으로 artifact가 생성
                            - packaging : 해당 프로젝트를 어떤 형태로 packaging 할 것인지 결정. jar, war, ear 등이 해당된다
                            - version : 프로젝트의 현재 버전. 개발 중일 때는 SNAPSHOT을 접미사로 사용.
                                  Maven의 버전 관리 기능은 라이브러리 관리를 편하게 한다
                            - name : 프로젝트의 이름
                            - url : 프로젝트 사이트가 있다면 사이트 URL을 등록하는것이 가능
                            - dependencies : Dependency Management 기능의 핵심
                                  해당 엘리먼트 안에 필요한 라이브러리를 지정함

Maven 프로젝트의 디렉토리 구조 - project +--- src +----- main +------ java : 자바 패키지폴더와 소스 코드가 위치
                                       |        |           |
                                       |        |           +------ resources : *.properties, *.xml 등 설정파일들이 위치
                                       |        |           |
                                       |        |           +------ webapp : WEB-INF와 웹 관련 리소스들(html, css 등)이 위치
                                       |        |
                                       |        +----- test +------ java : 테스트와 관련된 자바 패키지와 소스코드가 위치
                                       |                    |
                                       |                    +------ resources : 테스트와 관련된 설정파일들이 위치
                                       |
                                       +--- target : 컴파일, 패키징된 결과물이 위치
                                       |
                                       +--- pom.xml : Maven설정파일


                                       *main/java, test/ 는 별도로 만들어줘야 함
