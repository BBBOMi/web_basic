/* 1. CSS선언
   span : selector
   color : property
   red : value
*/
span {
  color: red;
}


/* 2. CSS 적용 규칙
   - 상위에서 적용한 스타일은 하위에도 반영 -> 여러 단계로 중첩된 element마다 같은 스타일을 부여하지 않아도 된다.
      (크기와 배치 관련된 속성들은 상속되지 않음)

   - cascading : CSS는 여러가지 스타일 정보를 기반으로 최종적으로 '경쟁'에 의해 적절한 스타일이 반영
        -> inline > internal , external (internal과 external의 우선순위는 같음)
        -> id > calss > element 순으로 우선 순위를 가짐
        -> 같은 selector라면 나중에 선언한 것이 반영.
        -> 선택자의 표현이 더 구체적인 것이 적용.
*/

/* # - id값을 의미 */
#a {
  color: red;
}

/* . - class값을 의미 */
.b {
  color: blue;
}

div {
  color: green;
}


/* 3. CSS selector - HTML의 요소를 tag, id, html 태그 속성 등을 통해 쉽게 찾아주는 방법
    - element에 style을 지정하기 위한 3가지 기본 선택자
            -> tag
            -> id
            -> class

    - 여러 선택자 함께 활용 가능
*/

/* tag로 지정 - 모든 같은 tag에 스타일 적용 */
span {
  color: red;
}

/* id로 지정 */
#spanId {
  color: red;
}

/* class로 지정 */
.spanClass {
  color: red;
}

/* div 태그안의 class이름이 myclassname인 것만 스타일 적용 */
div.myclassname {
  color: red;
}

/* 여러 셀렉터에 같은 style을 적용해야 한다면 그룹으로 묶어서 적용할 수도 있다 */
h1, span, div {
  color: red;
}

h1, span, div#id {
  color: red;
}

h1.span, div.classname {
  color: red;
}

/* 요소 선택(공백) : 모든 자손 요소
            - myId의 모든 span태그에 스타일 적용 */
#myId span {
  color: red;
}

/* 자식 선택 (>) : 바로 하위엘리먼트를 의미
              - id 값이 myId인 태그의 바로 하위 span태그에만 스타일 적용 */
#myId > span {
  color: red;
}

/* n번째 자식요소 선택1. element:nth-child(n)
          - className을 class값으로 가진 태그의 자식 중 n번째 태그가 p이면 적용
          - n을 찾는 순서의 기준 : 모든 자식 */
.className > p:nth-child(n) {
  color: red;
}

/* n번째 자식요소 선택2. element:nth-of-type(n)
            - className을 class값으로 가진 태그의 자식인 n번째 p태그
            - n을 찾는 순서의 기준 : 해당 element */
.className > p:nth-of-type(n) {
  color: red;
}
